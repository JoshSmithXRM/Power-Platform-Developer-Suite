/**
 * Component Base CSS - Foundation styles for all components
 * Uses VS Code theming variables for consistent appearance
 */

/* =============================================================================
   CSS Custom Properties for Component Theming
   ============================================================================= */

:root {
    /* Component sizing */
    --component-padding: 12px;
    --component-margin: 8px;
    --component-border-radius: 4px;
    --component-border-width: 1px;
    --component-gap: 12px;
    
    /* Component heights */
    --component-input-height: 32px;
    --component-button-height: 32px;
    --component-selector-height: 32px;
    --component-header-height: 40px;
    
    /* Component widths */
    --component-min-width: 200px;
    --component-max-width: 100%;
    --component-label-width: 120px;
    
    /* Animation timing */
    --component-transition-fast: 150ms ease-in-out;
    --component-transition-normal: 250ms ease-in-out;
    --component-transition-slow: 400ms ease-in-out;
    
    /* Z-index layers */
    --component-z-dropdown: 1000;
    --component-z-modal: 2000;
    --component-z-tooltip: 3000;
    
    /* Font sizing */
    --component-font-size-small: 12px;
    --component-font-size-normal: 13px;
    --component-font-size-large: 14px;
    --component-font-size-title: 16px;
    
    /* =============================================================================
       Semantic Component Design Tokens
       Maps to VS Code theme variables for consistent theming
       ============================================================================= */
    
    /* Semantic Component Backgrounds */
    --component-elevated-surface: var(--vscode-editor-background);   /* Cards, selectors, elevated panels */
    --component-main-surface: var(--vscode-editor-background);       /* Main panel background */
    --component-interactive-surface: var(--vscode-input-background); /* Buttons, inputs, dropdowns */
    --component-table-surface: var(--vscode-editor-background);      /* Table backgrounds - standardized */
    --component-header-surface: var(--vscode-editor-background);     /* Table headers, action bars */
    --component-table-header-surface: var(--vscode-list-activeSelectionBackground);     /* Table headers only - theme accent */
    
    /* Semantic Component Borders */
    --component-border: var(--vscode-input-border);                  /* Standard component borders */
    --component-border-subtle: var(--vscode-panel-border);           /* Subtle dividers */
    --component-border-focus: var(--vscode-focusBorder);             /* Focus states */
    --component-border-error: var(--vscode-errorBorder);             /* Error states */
    --component-border-hover: var(--vscode-inputOption-hoverBackground); /* Hover states */
    
    /* Semantic Component Text Colors */
    --component-text-primary: var(--vscode-foreground);              /* Primary text */
    --component-text-secondary: var(--vscode-descriptionForeground); /* Secondary text */
    --component-text-muted: var(--vscode-disabledForeground);        /* Muted/disabled text */
    --component-text-accent: var(--vscode-textLink-foreground);      /* Accent/link text */
    --component-text-error: var(--vscode-errorForeground);           /* Error text */
    --component-text-success: var(--vscode-terminal-ansiGreen);      /* Success text */
    
    /* Semantic Component States */
    --component-state-hover: var(--vscode-list-hoverBackground);     /* Hover backgrounds */
    --component-state-active: var(--vscode-list-activeSelectionBackground); /* Active/selected */
    --component-state-disabled: var(--vscode-disabledForeground);    /* Disabled state */
    --component-state-loading: var(--vscode-progressBar-background); /* Loading state */
}

/* =============================================================================
   Base Component Styles
   ============================================================================= */

.component-base {
    background: var(--vscode-editor-background);
    color: var(--vscode-editor-foreground);
    border: var(--component-border-width) solid var(--vscode-panel-border);
    border-radius: var(--component-border-radius);
    padding: var(--component-padding);
    margin-bottom: var(--component-margin);
    font-family: var(--vscode-font-family);
    font-size: var(--component-font-size-normal);
    line-height: 1.4;
    transition: all var(--component-transition-normal);
}

.component-container {
    display: flex;
    flex-direction: column;
    gap: var(--component-gap);
    width: 100%;
    min-width: var(--component-min-width);
    max-width: var(--component-max-width);
}

.component-row {
    display: flex;
    align-items: center;
    gap: var(--component-gap);
    width: 100%;
}

.component-column {
    display: flex;
    flex-direction: column;
    gap: calc(var(--component-gap) / 2);
    flex: 1;
}

/* =============================================================================
   Component Labels and Text
   ============================================================================= */

.component-label {
    color: var(--vscode-foreground);
    font-weight: 500;
    font-size: var(--component-font-size-normal);
    min-width: var(--component-label-width);
    margin-bottom: 4px;
    user-select: none;
}

.component-label.required::after {
    content: ' *';
    color: var(--vscode-errorForeground);
    font-weight: bold;
}

.component-description {
    color: var(--vscode-descriptionForeground);
    font-size: var(--component-font-size-small);
    margin-top: 4px;
    line-height: 1.3;
}

.component-title {
    color: var(--vscode-foreground);
    font-size: var(--component-font-size-title);
    font-weight: 600;
    margin-bottom: var(--component-gap);
    border-bottom: var(--component-border-width) solid var(--vscode-panel-border);
    padding-bottom: 8px;
}

/* =============================================================================
   Component States
   ============================================================================= */

.component-loading {
    position: relative;
    opacity: 0.6;
    pointer-events: none;
}

.component-loading::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--vscode-editor-background);
    opacity: 0.8;
    z-index: 1;
    border-radius: var(--component-border-radius);
}

.component-loading-container {
    display: none;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: var(--vscode-badge-background);
    color: var(--vscode-badge-foreground);
    padding: 8px 12px;
    border-radius: var(--component-border-radius);
    font-size: var(--component-font-size-small);
    z-index: 2;
}

.component-loading .component-loading-container {
    display: block;
}

.component-error {
    border-color: var(--vscode-errorBorder) !important;
    background: var(--vscode-inputValidation-errorBackground);
}

.component-error-container {
    display: none;
    color: var(--vscode-errorForeground);
    background: var(--vscode-inputValidation-errorBackground);
    border: var(--component-border-width) solid var(--vscode-errorBorder);
    border-radius: var(--component-border-radius);
    padding: 8px 12px;
    margin-top: 4px;
    font-size: var(--component-font-size-small);
}

.component-error .component-error-container {
    display: block;
}

.component-disabled {
    opacity: 0.5;
    pointer-events: none;
    cursor: not-allowed;
}

.component-hidden {
    display: none !important;
}

.component-readonly {
    background: var(--vscode-input-background);
    cursor: default;
}

/* =============================================================================
   Input Components Base Styles
   ============================================================================= */

.component-input,
.component-select,
.component-textarea {
    background: var(--vscode-input-background);
    color: var(--vscode-input-foreground);
    border: var(--component-border-width) solid var(--vscode-input-border);
    border-radius: var(--component-border-radius);
    padding: 6px 12px;
    font-family: var(--vscode-font-family);
    font-size: var(--component-font-size-normal);
    height: var(--component-input-height);
    width: 100%;
    transition: all var(--component-transition-fast);
    outline: none;
}

.component-input:focus,
.component-select:focus,
.component-textarea:focus {
    border-color: var(--vscode-focusBorder);
    background: var(--vscode-input-background);
}

.component-input:hover,
.component-select:hover,
.component-textarea:hover {
    border-color: var(--vscode-input-border);
}

.component-input::placeholder,
.component-textarea::placeholder {
    color: var(--vscode-input-placeholderForeground);
}

.component-input:invalid,
.component-select:invalid,
.component-textarea:invalid {
    border-color: var(--vscode-errorBorder);
    background: var(--vscode-inputValidation-errorBackground);
}

.component-textarea {
    height: auto;
    min-height: 80px;
    resize: vertical;
    padding: 8px 12px;
}

/* =============================================================================
   Button Components Base Styles
   ============================================================================= */

.component-button {
    background: var(--vscode-button-background);
    color: var(--vscode-button-foreground);
    border: none;
    border-radius: var(--component-border-radius);
    padding: 6px 16px;
    height: var(--component-button-height);
    font-family: var(--vscode-font-family);
    font-size: var(--component-font-size-normal);
    font-weight: 500;
    cursor: pointer;
    transition: all var(--component-transition-fast);
    outline: none;
    white-space: nowrap;
    user-select: none;
}

.component-button:hover {
    background: var(--vscode-button-hoverBackground);
}

.component-button:focus {
    outline: var(--component-border-width) solid var(--vscode-focusBorder);
    outline-offset: 2px;
}

.component-button:active {
    transform: translateY(1px);
}

.component-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
}

.component-button.secondary {
    background: var(--vscode-button-secondaryBackground);
    color: var(--vscode-button-secondaryForeground);
}

.component-button.secondary:hover {
    background: var(--vscode-button-secondaryHoverBackground);
}

.component-button.danger {
    background: var(--vscode-errorBackground);
    color: var(--vscode-errorForeground);
}

.component-button.small {
    padding: 4px 12px;
    height: 28px;
    font-size: var(--component-font-size-small);
}

.component-button.large {
    padding: 8px 20px;
    height: 36px;
    font-size: var(--component-font-size-large);
}

/* =============================================================================
   Status and Badge Styles
   ============================================================================= */

.component-status {
    display: inline-flex;
    align-items: center;
    padding: 4px 8px;
    border-radius: 12px;
    font-size: var(--component-font-size-small);
    font-weight: 500;
    white-space: nowrap;
}

.component-status::before {
    content: '';
    width: 8px;
    height: 8px;
    border-radius: 50%;
    margin-right: 6px;
}

.component-status.connected {
    background: rgba(0, 128, 0, 0.1);
    color: #00b300;
}

.component-status.connected::before {
    background: #00b300;
}

.component-status.disconnected {
    background: rgba(255, 0, 0, 0.1);
    color: #e74c3c;
}

.component-status.disconnected::before {
    background: #e74c3c;
}

.component-status.warning {
    background: rgba(255, 165, 0, 0.1);
    color: #ff8c00;
}

.component-status.warning::before {
    background: #ff8c00;
}

.component-status.info {
    background: rgba(0, 123, 255, 0.1);
    color: #007bff;
}

.component-status.info::before {
    background: #007bff;
}

/* =============================================================================
   Layout Utilities
   ============================================================================= */

.component-flex {
    display: flex;
}

.component-flex-column {
    display: flex;
    flex-direction: column;
}

.component-flex-row {
    display: flex;
    flex-direction: row;
}

/* Panel container styles - Flexible layout system for all panels */
.panel-container {
    height: 100vh;
    overflow: hidden;
    display: flex;
    flex-direction: column;
}

/* Top controls section - natural height, doesn't grow */
.panel-controls {
    flex: 0 0 auto;
    padding: 6px 12px;
    border-bottom: 1px solid var(--vscode-panel-border);
    background: var(--vscode-editor-background);
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    gap: 12px;
    min-height: 40px;
}

/* Action bar in controls - left side */
.panel-controls .action-bar {
    flex: 0 1 auto;
    margin-bottom: 0;
    order: 1;
}

/* Solution selector in controls - middle (when present) */
.panel-controls .solution-selector {
    flex: 0 0 auto;  /* Don't grow or shrink - maintain consistent width */
    width: 250px;    /* Fixed width for consistency */
    margin-bottom: 0;
    order: 2;
}

/* Environment selector in controls - right side */
.panel-controls .environment-selector {
    flex: 0 0 auto;  /* Don't grow or shrink - maintain consistent width */
    width: 350px;    /* Fixed width for consistency across all panels */
    margin-bottom: 0;
    margin-left: auto;
    order: 3;
}

/* Main content area - grows to fill remaining space */
.panel-content {
    flex: 1 1 auto;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    min-height: 0; /* Critical for flex child to shrink */
    padding: 0; /* Remove any default padding */
    margin: 0;  /* Remove any default margin */
}

/* Table section - grows to fill content area */
.panel-table-section {
    flex: 1 1 auto;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    min-height: 0;
}

.component-flex-center {
    justify-content: center;
    align-items: center;
}

.component-flex-between {
    justify-content: space-between;
}

.component-flex-end {
    justify-content: flex-end;
}

.component-flex-wrap {
    flex-wrap: wrap;
}

.component-flex-1 {
    flex: 1;
}

.component-align-left {
    text-align: left;
}

.component-align-center {
    text-align: center;
}

.component-align-right {
    text-align: right;
}

/* =============================================================================
   Responsive Design
   ============================================================================= */

@media (max-width: 768px) {
    :root {
        --component-padding: 8px;
        --component-gap: 8px;
        --component-label-width: 100px;
    }

    .component-row {
        flex-direction: column;
        align-items: stretch;
    }

    .component-label {
        min-width: auto;
    }
}

@media (max-width: 480px) {
    :root {
        --component-padding: 6px;
        --component-gap: 6px;
        --component-font-size-normal: 12px;
    }

    .component-button {
        padding: 8px 12px;
        width: 100%;
    }
}

/* =============================================================================
   Animation Classes
   ============================================================================= */

.component-fade-in {
    animation: componentFadeIn var(--component-transition-normal) ease-in-out;
}

.component-slide-in {
    animation: componentSlideIn var(--component-transition-normal) ease-in-out;
}

.component-scale-in {
    animation: componentScaleIn var(--component-transition-fast) ease-in-out;
}

@keyframes componentFadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes componentSlideIn {
    from {
        transform: translateY(-10px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes componentScaleIn {
    from {
        transform: scale(0.95);
        opacity: 0;
    }
    to {
        transform: scale(1);
        opacity: 1;
    }
}

/* =============================================================================
   Base Search Input - Reusable search/filter input component
   ============================================================================= */

.base-search-input-container {
    position: relative;
    width: 100%;
}

.base-search-input {
    width: 100%;
    padding: 6px 12px;
    border: 1px solid var(--vscode-input-border);
    background: var(--vscode-input-background);
    color: var(--vscode-input-foreground);
    font-size: 13px;
    border-radius: 2px;
    outline: none;
    box-sizing: border-box; /* CRITICAL: Fixes overflow bug */
    transition: border-color 0.15s ease;
    font-family: var(--vscode-font-family);
}

.base-search-input:focus {
    border-color: var(--vscode-focusBorder);
    outline: 1px solid var(--vscode-focusBorder);
    outline-offset: -1px;
}

.base-search-input::placeholder {
    color: var(--vscode-input-placeholderForeground);
    opacity: 1;
}

.base-search-input:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
}

/* Icon variants */
.base-search-input--with-icon-left {
    padding-left: 32px;
}

.base-search-input--with-icon-right {
    padding-right: 32px;
}

.base-search-input-icon {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
    color: var(--vscode-input-placeholderForeground);
    font-size: 14px;
}

.base-search-input-icon--left {
    left: 10px;
}

.base-search-input-icon--right {
    right: 10px;
}

/* Size variants */
.base-search-input--compact {
    padding: 4px 8px;
    font-size: 12px;
}

.base-search-input--compact.base-search-input--with-icon-left {
    padding-left: 28px;
}

.base-search-input--compact.base-search-input--with-icon-right {
    padding-right: 28px;
}

/* =============================================================================
   Accessibility
   ============================================================================= */

.component-sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

.component-focus-visible:focus-visible {
    outline: 2px solid var(--vscode-focusBorder);
    outline-offset: 2px;
}

/* =============================================================================
   Print Styles
   ============================================================================= */

@media print {
    .component-base {
        border: 1px solid #ccc;
        background: white;
        color: black;
    }

    .component-button,
    .component-loading-container,
    .component-error-container {
        display: none !important;
    }
}